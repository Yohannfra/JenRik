binary_path = "./JenRik"

[invalid_arg]
args = ["-h"]
status = 1

[no_args]
args = []
status = 1

[init_only]
args = ["init"]
status = 1

[invalid_test_file]
args = ["toito"]
stderr = "You must provide valid toml file\n"
status = 1

[invalid_test_file_but_toml]
args = ["toito.toml"]
stderr = "Could not open file toito.toml\n"
status = 1

[overwrite_init_test_JenRik_toml]
args = ["init", "JenRik"]
stderr = "test_JenRik.toml already exists, can't init the file\n"
status = 1

[test_working_init]
args = ["init", "my_bin"]
status = 0
post = "rm -f test_my_bin.toml"

[empty_toml]
args = ["tests/empty.toml"]
status = 1
stderr = "Could not find binary_path key in tests/empty.toml\n"

[invalid_binary_path]
args = ["tests/invalid_path.toml"]
status = 1
stderr = "./toitoi : file not found\n"

[invalid_test_key]
args = ["tests/invalid_test_key.toml"]
status = 1
stderr = "invalid_test: Unknown key : toto\n"

[duplicate_stdout]
args = ["tests/duplicate_stdout.toml"]
status = 1
stderr = "invalid_test: Duplicated stdout keys, you can't use both 'stdout' and 'stdout_file' for a test\n"

[duplicate_stderr]
args = ["tests/duplicate_stderr.toml"]
status = 1
stderr = "invalid_test: Duplicated stderr keys, you can't use both 'stderr' and 'stderr_file' for a test\n"

[bad_test]
args = ["tests/invalid_test.toml"]
status = 1
stderr = "Invalid test : 'my_bad_test toto'\n"

[invalid_ouput_file]
args = ["tests/invalid_output_file.toml"]
status = 1
stderr = "tests/README.md : file not found\n"

[test_pipe_basic_stdout]
args = []
status = 1
pipe_stdout = "| grep \"USAGE\""
stdout = "USAGE : ./JenRik file.jrk | init path_to_binary\n"

[test_pipe_two_pipes_stdout]
args = []
status = 1
pipe_stdout = "| grep \"USAGE\" | cut -d ' ' -f1"
stdout = "USAGE\n"

[test_pipe_stderr]
args = ["tests/duplicate_stderr.toml"]
status = 1
pipe_stderr = "| cut -d ':' -f1"
stderr = "invalid_test\n"

[test_timeout_success]
args = []
status = 1
timeout= 0.1

[test_timeout_fail]
args = []
status = 1
timeout= 0
should_fail = true

[test_timeout_loop]
args = ["tests/infinite_loop.toml"]
status = 0
timeout = 0.5
should_fail = true

[test_status_should_fail]
args = []
status = 0
should_fail = true
